# Copyright 2021 The Vitess Authors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Ensure config directory
  become: yes
  become_user: root
  with_items:
    - /etc/vitess/conf
  file:
    state: directory
    path: '{{ item }}'
    owner: '{{ vitess_user }}'
    group: '{{ vitess_group }}'

- name: reinstall systemd unit if needed
  include_tasks: systemd.yml
  when: arewefastyet_execution_workload is undefined or arewefastyet_execution_workload != 'micro'

- name: check if there is a vtctld service
  shell: service vtctld@{{ vitess_cell }} status
  register: vtctld_status
  failed_when: not(vtctld_status.rc == 3 or vtctld_status.rc == 4 or vtctld_status.rc == 0)

- name: stop old vtctld
  become: yes
  become_user: root
  service:
    name: vtctld@{{ vitess_cell }}
    enabled: false
    state: stopped
  changed_when: false
  when: vtctld_status.rc == 0
  failed_when: false

- name: check if there is a cell service
  shell: service cell@{{ vitess_cell }} status
  register: cell_status
  failed_when: not(vtctld_status.rc == 3 or cell_status.rc == 4 or cell_status.rc == 0)

- name: stop old cell
  become: yes
  become_user: root
  service:
    name: cell@{{ vitess_cell }}
    enabled: false
    state: stopped
  changed_when: false
  when: cell_status.rc == 0
  failed_when: false

- name: remove old config
  become: yes
  become_user: root
  with_items:
    - '/etc/vitess/conf/vtctld-{{ vitess_cell }}.conf'
    - '/etc/systemd/system/vtctld@.service'
    - '/etc/systemd/system/cell@.service'
  file:
    state: absent
    path: '{{ item }}'
  failed_when: false

- name: systemctl daemon-reload
  become: yes
  become_user: root
  systemd:
    daemon_reload: yes
  failed_when: false

- name: remove binary
  shell: rm -f $(which vtctld vtctl vtctlclient vtctldclient)